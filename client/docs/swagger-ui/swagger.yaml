swagger: '2.0'
info:
  title: canto Chain - gRPC Gateway docs
  description: A REST interface for state queries and transactions
  version: 1.0.0
paths:
  /canto/epochs/v1/current_epoch:
    get:
      summary: CurrentEpoch provide current epoch of specified identifier
      operationId: CurrentEpoch
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              current_epoch:
                type: string
                format: int64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: identifier
          in: query
          required: false
          type: string
      tags:
        - Query
  /canto/epochs/v1/epochs:
    get:
      summary: EpochInfos provide running epochInfos
      operationId: EpochInfos
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              epochs:
                type: array
                items:
                  type: object
                  properties:
                    identifier:
                      type: string
                    start_time:
                      type: string
                      format: date-time
                    duration:
                      type: string
                    current_epoch:
                      type: string
                      format: int64
                    current_epoch_start_time:
                      type: string
                      format: date-time
                    epoch_counting_started:
                      type: boolean
                    current_epoch_start_height:
                      type: string
                      format: int64
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /canto/erc20/v1/params:
    get:
      summary: Params retrieves the erc20 module params
      operationId: ERC20Params
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  enable_erc20:
                    type: boolean
                    description: >-
                      parameter to enable the conversion of Cosmos coins <-->
                      ERC20 tokens.
                  enable_evm_hook:
                    type: boolean
                    description: >-
                      parameter to enable the EVM hook that converts an ERC20
                      token to a Cosmos

                      Coin by transferring the Tokens through a MsgEthereumTx to
                      the

                      ModuleAddress Ethereum address.
                title: Params defines the erc20 module params
            description: |-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /canto/erc20/v1/token_pairs:
    get:
      summary: TokenPairs retrieves registered token pairs
      operationId: TokenPairs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              token_pairs:
                type: array
                items:
                  type: object
                  properties:
                    erc20_address:
                      type: string
                      title: address of ERC20 contract token
                    denom:
                      type: string
                      title: cosmos base denomination to be mapped to
                    enabled:
                      type: boolean
                      title: shows token mapping enable status
                    contract_owner:
                      title: >-
                        ERC20 owner address ENUM (0 invalid, 1 ModuleAccount, 2
                        external address)
                      type: string
                      enum:
                        - OWNER_UNSPECIFIED
                        - OWNER_MODULE
                        - OWNER_EXTERNAL
                      default: OWNER_UNSPECIFIED
                      description: |-
                        Owner enumerates the ownership of a ERC20 contract.

                         - OWNER_UNSPECIFIED: OWNER_UNSPECIFIED defines an invalid/undefined owner.
                         - OWNER_MODULE: OWNER_MODULE erc20 is owned by the erc20 module account.
                         - OWNER_EXTERNAL: EXTERNAL erc20 is owned by an external account.
                  description: >-
                    TokenPair defines an instance that records a pairing
                    consisting of a native
                     Cosmos Coin and an ERC20 token address.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryTokenPairsResponse is the response type for the
              Query/TokenPairs RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /canto/erc20/v1/token_pairs/{token}:
    get:
      summary: TokenPair retrieves a registered token pair
      operationId: TokenPair
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              token_pair:
                type: object
                properties:
                  erc20_address:
                    type: string
                    title: address of ERC20 contract token
                  denom:
                    type: string
                    title: cosmos base denomination to be mapped to
                  enabled:
                    type: boolean
                    title: shows token mapping enable status
                  contract_owner:
                    title: >-
                      ERC20 owner address ENUM (0 invalid, 1 ModuleAccount, 2
                      external address)
                    type: string
                    enum:
                      - OWNER_UNSPECIFIED
                      - OWNER_MODULE
                      - OWNER_EXTERNAL
                    default: OWNER_UNSPECIFIED
                    description: |-
                      Owner enumerates the ownership of a ERC20 contract.

                       - OWNER_UNSPECIFIED: OWNER_UNSPECIFIED defines an invalid/undefined owner.
                       - OWNER_MODULE: OWNER_MODULE erc20 is owned by the erc20 module account.
                       - OWNER_EXTERNAL: EXTERNAL erc20 is owned by an external account.
                description: >-
                  TokenPair defines an instance that records a pairing
                  consisting of a native
                   Cosmos Coin and an ERC20 token address.
            description: >-
              QueryTokenPairResponse is the response type for the
              Query/TokenPair RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: token
          description: >-
            token identifier can be either the hex contract address of the ERC20
            or the

            Cosmos base denomination
          in: path
          required: true
          type: string
      tags:
        - Query
  /canto/inflation/v1/circulating_supply:
    get:
      summary: |-
        CirculatingSupply retrieves the total number of tokens that are in
        circulation (i.e. excluding unvested tokens).
      operationId: CirculatingSupply
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              circulating_supply:
                title: total amount of coins in circulation
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom
                  method

                  signatures required by gogoproto.
            description: |-
              QueryCirculatingSupplyResponse is the response type for the
              Query/CirculatingSupply RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /canto/inflation/v1/epoch_mint_provision:
    get:
      summary: EpochMintProvision retrieves current minting epoch provision value.
      operationId: EpochMintProvision
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              epoch_mint_provision:
                description: >-
                  epoch_mint_provision is the current minting per epoch
                  provision value.
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
            description: |-
              QueryEpochMintProvisionResponse is the response type for the
              Query/EpochMintProvision RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /canto/inflation/v1/inflation_rate:
    get:
      summary: InflationRate retrieves the inflation rate of the current period.
      operationId: InflationRate
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              inflation_rate:
                type: string
                title: rate by which the total supply increases within one period
            description: >-
              QueryInflationRateResponse is the response type for the
              Query/InflationRate

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /canto/inflation/v1/params:
    get:
      summary: Params retrieves the total set of minting parameters.
      operationId: InflationParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  mint_denom:
                    type: string
                    title: type of coin to mint
                  exponential_calculation:
                    title: variables to calculate exponential inflation
                    type: object
                    properties:
                      a:
                        type: string
                        title: initial value
                      r:
                        type: string
                        title: reduction factor
                      c:
                        type: string
                        title: long term inflation
                      bonding_target:
                        type: string
                        title: bonding target
                      max_variance:
                        type: string
                        title: max variance
                  inflation_distribution:
                    title: inflation distribution of the minted denom
                    type: object
                    properties:
                      staking_rewards:
                        type: string
                        title: >-
                          staking_rewards defines the proportion of the minted
                          minted_denom that is

                          to be allocated as staking rewards
                      community_pool:
                        type: string
                        title: >-
                          // usage_incentives defines the proportion of the
                          minted minted_denom that

                          is

                          // to be allocated to the incentives module address

                          string usage_incentives = 2 [
                            (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
                            (gogoproto.nullable) = false
                          ];

                          community_pool defines the proportion of the minted
                          minted_denom that is to

                          be allocated to the community pool
                  enable_inflation:
                    type: boolean
                    title: >-
                      parameter to enable inflation and halt increasing the
                      skipped_epochs
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /canto/inflation/v1/period:
    get:
      summary: Period retrieves current period.
      operationId: Period
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              period:
                type: string
                format: uint64
                description: period is the current minting per epoch provision value.
            description: >-
              QueryPeriodResponse is the response type for the Query/Period RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /canto/inflation/v1/skipped_epochs:
    get:
      summary: SkippedEpochs retrieves the total number of skipped epochs.
      operationId: SkippedEpochs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              skipped_epochs:
                type: string
                format: uint64
                description: number of epochs that the inflation module has been disabled.
            description: >-
              QuerySkippedEpochsResponse is the response type for the
              Query/SkippedEpochs

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /canto/onboarding/v1/params:
    get:
      summary: Params retrieves the total set of onboarding parameters.
      operationId: OnboardingParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  enable_onboarding:
                    type: boolean
                    title: enable onboarding IBC middleware
                  auto_swap_threshold:
                    type: string
                  whitelisted_channels:
                    type: array
                    items:
                      type: string
                title: Params holds parameters for the onboarding module
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /canto/coinswap/params:
    get:
      summary: Params returns parameters of the module.
      operationId: CoinswapParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  fee:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  pool_creation_fee:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  tax_rate:
                    type: string
                  max_standard_coin_per_pool:
                    type: string
                  max_swap_amount:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                title: Params defines token module's parameters
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /canto/coinswap/pools:
    get:
      summary: LiquidityPools returns all the liquidity pools available
      operationId: LiquidityPools
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pools:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    escrow_address:
                      type: string
                      title: escrow account for deposit tokens
                    standard:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      title: main token balance
                    token:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      title: counterparty token balance
                    lpt:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      title: liquidity token balance
                    fee:
                      type: string
                      title: liquidity pool fee
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryLiquidityPoolsResponse is response type for the
              Query/LiquidityPools RPC

              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /canto/coinswap/pools/{lpt_denom}:
    get:
      summary: |-
        LiquidityPool returns the liquidity pool for the provided
        lpt_denom
      operationId: LiquidityPool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pool:
                type: object
                properties:
                  id:
                    type: string
                  escrow_address:
                    type: string
                    title: escrow account for deposit tokens
                  standard:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    title: main token balance
                  token:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    title: counterparty token balance
                  lpt:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    title: liquidity token balance
                  fee:
                    type: string
                    title: liquidity pool fee
            title: >-
              QueryLiquidityPoolResponse is response type for the
              Query/LiquidityPool RPC

              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: lpt_denom
          in: path
          required: true
          type: string
      tags:
        - Query
definitions:
  canto.epochs.v1.EpochInfo:
    type: object
    properties:
      identifier:
        type: string
      start_time:
        type: string
        format: date-time
      duration:
        type: string
      current_epoch:
        type: string
        format: int64
      current_epoch_start_time:
        type: string
        format: date-time
      epoch_counting_started:
        type: boolean
      current_epoch_start_height:
        type: string
        format: int64
  canto.epochs.v1.QueryCurrentEpochResponse:
    type: object
    properties:
      current_epoch:
        type: string
        format: int64
  canto.epochs.v1.QueryEpochsInfoResponse:
    type: object
    properties:
      epochs:
        type: array
        items:
          type: object
          properties:
            identifier:
              type: string
            start_time:
              type: string
              format: date-time
            duration:
              type: string
            current_epoch:
              type: string
              format: int64
            current_epoch_start_time:
              type: string
              format: date-time
            epoch_counting_started:
              type: boolean
            current_epoch_start_height:
              type: string
              format: int64
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  cosmos.base.query.v1beta1.PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
      count_total:
        type: boolean
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
      reverse:
        type: boolean
        description: >-
          reverse is set to true if results are to be returned in the descending
          order.


          Since: cosmos-sdk 0.43
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  cosmos.base.query.v1beta1.PageResponse:
    type: object
    properties:
      next_key:
        type: string
        format: byte
        description: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently. It will be empty if
          there are no more results.
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
      value:
        type: string
        format: byte
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
  canto.erc20.v1.Owner:
    type: string
    enum:
      - OWNER_UNSPECIFIED
      - OWNER_MODULE
      - OWNER_EXTERNAL
    default: OWNER_UNSPECIFIED
    description: |-
      Owner enumerates the ownership of a ERC20 contract.

       - OWNER_UNSPECIFIED: OWNER_UNSPECIFIED defines an invalid/undefined owner.
       - OWNER_MODULE: OWNER_MODULE erc20 is owned by the erc20 module account.
       - OWNER_EXTERNAL: EXTERNAL erc20 is owned by an external account.
  canto.erc20.v1.Params:
    type: object
    properties:
      enable_erc20:
        type: boolean
        description: parameter to enable the conversion of Cosmos coins <--> ERC20 tokens.
      enable_evm_hook:
        type: boolean
        description: >-
          parameter to enable the EVM hook that converts an ERC20 token to a
          Cosmos

          Coin by transferring the Tokens through a MsgEthereumTx to the

          ModuleAddress Ethereum address.
    title: Params defines the erc20 module params
  canto.erc20.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          enable_erc20:
            type: boolean
            description: >-
              parameter to enable the conversion of Cosmos coins <--> ERC20
              tokens.
          enable_evm_hook:
            type: boolean
            description: >-
              parameter to enable the EVM hook that converts an ERC20 token to a
              Cosmos

              Coin by transferring the Tokens through a MsgEthereumTx to the

              ModuleAddress Ethereum address.
        title: Params defines the erc20 module params
    description: |-
      QueryParamsResponse is the response type for the Query/Params RPC
      method.
  canto.erc20.v1.QueryTokenPairResponse:
    type: object
    properties:
      token_pair:
        type: object
        properties:
          erc20_address:
            type: string
            title: address of ERC20 contract token
          denom:
            type: string
            title: cosmos base denomination to be mapped to
          enabled:
            type: boolean
            title: shows token mapping enable status
          contract_owner:
            title: >-
              ERC20 owner address ENUM (0 invalid, 1 ModuleAccount, 2 external
              address)
            type: string
            enum:
              - OWNER_UNSPECIFIED
              - OWNER_MODULE
              - OWNER_EXTERNAL
            default: OWNER_UNSPECIFIED
            description: |-
              Owner enumerates the ownership of a ERC20 contract.

               - OWNER_UNSPECIFIED: OWNER_UNSPECIFIED defines an invalid/undefined owner.
               - OWNER_MODULE: OWNER_MODULE erc20 is owned by the erc20 module account.
               - OWNER_EXTERNAL: EXTERNAL erc20 is owned by an external account.
        description: >-
          TokenPair defines an instance that records a pairing consisting of a
          native
           Cosmos Coin and an ERC20 token address.
    description: |-
      QueryTokenPairResponse is the response type for the Query/TokenPair RPC
      method.
  canto.erc20.v1.QueryTokenPairsResponse:
    type: object
    properties:
      token_pairs:
        type: array
        items:
          type: object
          properties:
            erc20_address:
              type: string
              title: address of ERC20 contract token
            denom:
              type: string
              title: cosmos base denomination to be mapped to
            enabled:
              type: boolean
              title: shows token mapping enable status
            contract_owner:
              title: >-
                ERC20 owner address ENUM (0 invalid, 1 ModuleAccount, 2 external
                address)
              type: string
              enum:
                - OWNER_UNSPECIFIED
                - OWNER_MODULE
                - OWNER_EXTERNAL
              default: OWNER_UNSPECIFIED
              description: |-
                Owner enumerates the ownership of a ERC20 contract.

                 - OWNER_UNSPECIFIED: OWNER_UNSPECIFIED defines an invalid/undefined owner.
                 - OWNER_MODULE: OWNER_MODULE erc20 is owned by the erc20 module account.
                 - OWNER_EXTERNAL: EXTERNAL erc20 is owned by an external account.
          description: >-
            TokenPair defines an instance that records a pairing consisting of a
            native
             Cosmos Coin and an ERC20 token address.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryTokenPairsResponse is the response type for the Query/TokenPairs RPC
      method.
  canto.erc20.v1.TokenPair:
    type: object
    properties:
      erc20_address:
        type: string
        title: address of ERC20 contract token
      denom:
        type: string
        title: cosmos base denomination to be mapped to
      enabled:
        type: boolean
        title: shows token mapping enable status
      contract_owner:
        title: >-
          ERC20 owner address ENUM (0 invalid, 1 ModuleAccount, 2 external
          address)
        type: string
        enum:
          - OWNER_UNSPECIFIED
          - OWNER_MODULE
          - OWNER_EXTERNAL
        default: OWNER_UNSPECIFIED
        description: |-
          Owner enumerates the ownership of a ERC20 contract.

           - OWNER_UNSPECIFIED: OWNER_UNSPECIFIED defines an invalid/undefined owner.
           - OWNER_MODULE: OWNER_MODULE erc20 is owned by the erc20 module account.
           - OWNER_EXTERNAL: EXTERNAL erc20 is owned by an external account.
    description: >-
      TokenPair defines an instance that records a pairing consisting of a
      native
       Cosmos Coin and an ERC20 token address.
  canto.inflation.v1.ExponentialCalculation:
    type: object
    properties:
      a:
        type: string
        title: initial value
      r:
        type: string
        title: reduction factor
      c:
        type: string
        title: long term inflation
      bonding_target:
        type: string
        title: bonding target
      max_variance:
        type: string
        title: max variance
    title: >-
      ExponentialCalculation holds factors to calculate exponential inflation on

      each period. Calculation reference:

      periodProvision = exponentialDecay       *  bondingIncentive

      f(x)            = (a * (1 - r) ^ x + c)  *  (1 + max_variance -
      bondedRatio *

      (max_variance / bonding_target))
  canto.inflation.v1.InflationDistribution:
    type: object
    properties:
      staking_rewards:
        type: string
        title: >-
          staking_rewards defines the proportion of the minted minted_denom that
          is

          to be allocated as staking rewards
      community_pool:
        type: string
        title: >-
          // usage_incentives defines the proportion of the minted minted_denom
          that

          is

          // to be allocated to the incentives module address

          string usage_incentives = 2 [
            (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
            (gogoproto.nullable) = false
          ];

          community_pool defines the proportion of the minted minted_denom that
          is to

          be allocated to the community pool
    title: >-
      InflationDistribution defines the distribution in which inflation is

      allocated through minting on each epoch (staking, incentives, community).
      It

      excludes the team vesting distribution, as this is minted once at genesis.

      The initial InflationDistribution can be calculated from the Evmos Token

      Model like this:

      mintDistribution1 = distribution1 / (1 - teamVestingDistribution)

      0.5333333         = 40%           / (1 - 25%)
  canto.inflation.v1.Params:
    type: object
    properties:
      mint_denom:
        type: string
        title: type of coin to mint
      exponential_calculation:
        title: variables to calculate exponential inflation
        type: object
        properties:
          a:
            type: string
            title: initial value
          r:
            type: string
            title: reduction factor
          c:
            type: string
            title: long term inflation
          bonding_target:
            type: string
            title: bonding target
          max_variance:
            type: string
            title: max variance
      inflation_distribution:
        title: inflation distribution of the minted denom
        type: object
        properties:
          staking_rewards:
            type: string
            title: >-
              staking_rewards defines the proportion of the minted minted_denom
              that is

              to be allocated as staking rewards
          community_pool:
            type: string
            title: >-
              // usage_incentives defines the proportion of the minted
              minted_denom that

              is

              // to be allocated to the incentives module address

              string usage_incentives = 2 [
                (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
                (gogoproto.nullable) = false
              ];

              community_pool defines the proportion of the minted minted_denom
              that is to

              be allocated to the community pool
      enable_inflation:
        type: boolean
        title: parameter to enable inflation and halt increasing the skipped_epochs
    description: Params holds parameters for the inflation module.
  canto.inflation.v1.QueryCirculatingSupplyResponse:
    type: object
    properties:
      circulating_supply:
        title: total amount of coins in circulation
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          DecCoin defines a token with a denomination and a decimal amount.

          NOTE: The amount field is an Dec which implements the custom method
          signatures required by gogoproto.
    description: |-
      QueryCirculatingSupplyResponse is the response type for the
      Query/CirculatingSupply RPC method.
  canto.inflation.v1.QueryEpochMintProvisionResponse:
    type: object
    properties:
      epoch_mint_provision:
        description: epoch_mint_provision is the current minting per epoch provision value.
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
    description: |-
      QueryEpochMintProvisionResponse is the response type for the
      Query/EpochMintProvision RPC method.
  canto.inflation.v1.QueryInflationRateResponse:
    type: object
    properties:
      inflation_rate:
        type: string
        title: rate by which the total supply increases within one period
    description: >-
      QueryInflationRateResponse is the response type for the
      Query/InflationRate

      RPC method.
  canto.inflation.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          mint_denom:
            type: string
            title: type of coin to mint
          exponential_calculation:
            title: variables to calculate exponential inflation
            type: object
            properties:
              a:
                type: string
                title: initial value
              r:
                type: string
                title: reduction factor
              c:
                type: string
                title: long term inflation
              bonding_target:
                type: string
                title: bonding target
              max_variance:
                type: string
                title: max variance
          inflation_distribution:
            title: inflation distribution of the minted denom
            type: object
            properties:
              staking_rewards:
                type: string
                title: >-
                  staking_rewards defines the proportion of the minted
                  minted_denom that is

                  to be allocated as staking rewards
              community_pool:
                type: string
                title: >-
                  // usage_incentives defines the proportion of the minted
                  minted_denom that

                  is

                  // to be allocated to the incentives module address

                  string usage_incentives = 2 [
                    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
                    (gogoproto.nullable) = false
                  ];

                  community_pool defines the proportion of the minted
                  minted_denom that is to

                  be allocated to the community pool
          enable_inflation:
            type: boolean
            title: >-
              parameter to enable inflation and halt increasing the
              skipped_epochs
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  canto.inflation.v1.QueryPeriodResponse:
    type: object
    properties:
      period:
        type: string
        format: uint64
        description: period is the current minting per epoch provision value.
    description: QueryPeriodResponse is the response type for the Query/Period RPC method.
  canto.inflation.v1.QuerySkippedEpochsResponse:
    type: object
    properties:
      skipped_epochs:
        type: string
        format: uint64
        description: number of epochs that the inflation module has been disabled.
    description: >-
      QuerySkippedEpochsResponse is the response type for the
      Query/SkippedEpochs

      RPC method.
  cosmos.base.v1beta1.DecCoin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      DecCoin defines a token with a denomination and a decimal amount.

      NOTE: The amount field is an Dec which implements the custom method
      signatures required by gogoproto.
  canto.onboarding.v1.Params:
    type: object
    properties:
      enable_onboarding:
        type: boolean
        title: enable onboarding IBC middleware
      auto_swap_threshold:
        type: string
      whitelisted_channels:
        type: array
        items:
          type: string
    title: Params holds parameters for the onboarding module
  canto.onboarding.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          enable_onboarding:
            type: boolean
            title: enable onboarding IBC middleware
          auto_swap_threshold:
            type: string
          whitelisted_channels:
            type: array
            items:
              type: string
        title: Params holds parameters for the onboarding module
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  canto.coinswap.v1.Params:
    type: object
    properties:
      fee:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      pool_creation_fee:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      tax_rate:
        type: string
      max_standard_coin_per_pool:
        type: string
      max_swap_amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    title: Params defines token module's parameters
  canto.coinswap.v1.PoolInfo:
    type: object
    properties:
      id:
        type: string
      escrow_address:
        type: string
        title: escrow account for deposit tokens
      standard:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        title: main token balance
      token:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        title: counterparty token balance
      lpt:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        title: liquidity token balance
      fee:
        type: string
        title: liquidity pool fee
  canto.coinswap.v1.QueryLiquidityPoolResponse:
    type: object
    properties:
      pool:
        type: object
        properties:
          id:
            type: string
          escrow_address:
            type: string
            title: escrow account for deposit tokens
          standard:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            title: main token balance
          token:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            title: counterparty token balance
          lpt:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            title: liquidity token balance
          fee:
            type: string
            title: liquidity pool fee
    title: >-
      QueryLiquidityPoolResponse is response type for the Query/LiquidityPool
      RPC

      method
  canto.coinswap.v1.QueryLiquidityPoolsResponse:
    type: object
    properties:
      pools:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            escrow_address:
              type: string
              title: escrow account for deposit tokens
            standard:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              title: main token balance
            token:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              title: counterparty token balance
            lpt:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              title: liquidity token balance
            fee:
              type: string
              title: liquidity pool fee
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: >-
      QueryLiquidityPoolsResponse is response type for the Query/LiquidityPools
      RPC

      method
  canto.coinswap.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          fee:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          pool_creation_fee:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          tax_rate:
            type: string
          max_standard_coin_per_pool:
            type: string
          max_swap_amount:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
        title: Params defines token module's parameters
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
